
if (tasks.findByName('war') != null) {
    apply plugin: 'eclipse-wtp' // TODO this might not make any sense when using the jboss module system, can't launch from within Eclipse anyways...
} else if (tasks.findByName('jar') != null) {
    apply plugin: 'eclipse'
} else {
    throw new RuntimeException("initialize either the 'java' or 'war' plugin before the 'eclipse' plugin")
}

eclipse {
    classpath {
        downloadSources = true
        downloadJavadoc = true
        defaultOutputDir = new File(buildDir, "eclipse")
    }
}

tasks.getByName('eclipse').dependsOn 'eclipseResourcePrefs'
task eclipseResourcePrefs << {
    storeEclipseProps(file(".settings/org.eclipse.core.resources.prefs"),
        [
            'eclipse.preferences.version': '1',
            'encoding/<project>': sourceEncoding
        ])

    storeEclipseProps(file(".settings/org.eclipse.core.runtime.prefs"),
        [
            'eclipse.preferences.version': '1',
            'line.separator': '\n'
        ])
}

void storeEclipseProps(File f, def props) {
    Properties p = new Properties()
    if (f.exists()) {
        p.load(new FileInputStream(f))
    }
    props.each { k, v ->
        p.setProperty(k, v)
    }
    p.store(new FileOutputStream(f), "generated by gradle")
}

cleanEclipse.dependsOn 'cleanEclipseResourcePrefs'
task cleanEclipseResourcePrefs(type: Delete) {
    delete '.settings/org.eclipse.core.resources.prefs', '.settings/org.eclipse.core.runtime.prefs'
}

